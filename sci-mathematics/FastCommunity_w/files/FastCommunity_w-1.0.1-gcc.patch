--- fastcommunity_w_mh.cc.0	2011-12-19 00:50:26.000000000 +0900
+++ fastcommunity_w_mh.cc	2011-12-19 00:51:19.000000000 +0900
@@ -74,6 +74,7 @@
 #include <iostream>
 #include <fstream>
 #include <string>
+#include <string.h>
 #include "stdlib.h"
 #include "time.h"
 #include "math.h"
@@ -254,7 +255,7 @@
 	// Parse the command line, build filenames and then import the .pairs file
 	cout << "\nFast Community Inference.\n";
 	cout << "Copyright (c) 2004 by Aaron Clauset (aaron@cs.unm.edu)\n";
-	if (parseCommandLine(argc, argv)) {} else { return 0; }
+	if (parseCommandLine(argc, argv)) {} else { return 1; }
 	cout << "\nimporting: " << ioparm.filename << endl;    // note the input filename
 	buildFilenames();								// builds filename strings
 	readInputFile();								// gets adjacency matrix data
@@ -374,7 +375,7 @@
 	fout.close();
 
 	cout << "exited safely" << endl;
-	return 1;
+	return 0;
 }
 
 
--- maxheap.h.0	2011-12-19 00:50:28.000000000 +0900
+++ maxheap.h	2011-12-19 00:50:35.000000000 +0900
@@ -40,7 +40,9 @@
 #if !defined(MAXHEAP_INCLUDED)
 #define MAXHEAP_INCLUDED
 
-#include <iostream.h>
+#include <iostream>
+
+using namespace std;
 
 /*   Because using this heap requires us to be able to modify an arbitrary element's
 	data in constant O(1) time, I use to tricky tactic of having elements in an array-
--- vektor.h.0	2011-12-19 00:50:31.000000000 +0900
+++ vektor.h	2011-12-19 00:50:35.000000000 +0900
@@ -30,7 +30,9 @@
 #if !defined(vektor_INCLUDED)
 #define vektor_INCLUDED
 
-#include <iostream.h>
+#include <iostream>
+
+using namespace std;
 
 #if !defined(vektor_INCLUDED)
 #define vektor_INCLUDED
